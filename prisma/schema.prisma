// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum RoleType {
  guest
  moderator
}

enum ChannelType {
  audio
  video
  text
}

model users {
  id         String   @id() @default(uuid())
  username   String
  email      String
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  Servers  servers[]
  Channels channels[]
}

model servers {
  id          String   @id() @default(uuid())
  name        String
  userId      String
  serverImage String?
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
  users       users    @relation(fields: [userId], references: [id], onDelete: Cascade)

  // usersId     String?

  channels channels[]

  @@unique([userId, name])
}

model channels {
  id         String      @id() @default(uuid())
  name       String
  serverId   String
  type       ChannelType @default(text)
  userId     String
  users      users       @relation(fields: [userId], references: [id], onDelete: Cascade)
  servers    servers     @relation(fields: [serverId], references: [id], onDelete: Cascade)
  created_at DateTime    @default(now())
  updated_at DateTime    @default(now())

  @@unique([serverId, name])
}
